name: Docker Image CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Se connecter à GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      # Étape 3 : Extraire un tag basé sur la date
      - name: Define image tag
        id: image-tag
        run: echo "tag=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # Étape 4 : Construire l'image Docker
      - name: Build Docker image
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/my-image-name" | tr '[:upper:]' '[:lower:]')
          docker build . --file ./api/Dockerfile --tag $IMAGE_NAME:${{ env.tag }}

      # Étape 5 : Pousser l'image Docker vers GHCR
      - name: Push Docker image to GHCR
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/my-image-name" | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME:${{ env.tag }}
          docker tag $IMAGE_NAME:${{ env.tag }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

      # Étape 6 : Afficher l'URL de l'image pour utilisation dans Terraform
      - name: Output Docker image URL
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/my-image-name" | tr '[:upper:]' '[:lower:]')
          echo "Docker image URL: $IMAGE_NAME:${{ env.tag }}"